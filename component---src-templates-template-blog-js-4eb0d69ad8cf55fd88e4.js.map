{"version":3,"sources":["webpack://aureliendud-website/./src/services/formaters.js","webpack://aureliendud-website/./src/services/tools.js","webpack://aureliendud-website/./src/partials/common/comments.js","webpack://aureliendud-website/./src/templates/template-blog.js"],"names":["formatBlogData","data","title","frontmatter","date","category","cover","childImageSharp","excerpt","link","fields","slug","body","words","wordCount","timeToReadMessage","time","Math","round","timeToRead","comments","useRef","useState","isReady","setIsReady","useEffect","current","scriptTag","document","createElement","async","src","setAttribute","appendChild","className","ref","coverStyle","css","coverImgStyles","Template","model","mdx","meta","type","coverEl","parallax","scroll","mov","elBound","getBoundingClientRect","window","addEventListener","handleScroll","removeEventListener","event","preventDefault","scrollY","height","max","opacity","sign","style","transform","overflow","cx","G","image","getImage","alt","to","getCategoryRoute","MDXProvider","components","mdxComponents","MDXRenderer"],"mappings":"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","file":"component---src-templates-template-blog-js-4eb0d69ad8cf55fd88e4.js","sourcesContent":["/**\n * Format data from graphQL into a friendly flat object\n * @param {object} data from graphQL\n */\nexport function formatBlogData(data) {\n  return {\n    title: data?.frontmatter?.title || null,\n    date: data?.frontmatter?.date || null,\n    category: data?.frontmatter?.category || null,\n    cover: data?.frontmatter?.cover?.childImageSharp || null,\n    excerpt: data?.excerpt || null,\n    link: data?.fields?.slug || null,\n    body: data?.body || null,\n    words: data?.wordCount?.words || null\n  };\n}\n\n","export function timeToRead (words) {\n  if (!words || typeof words !== \"number\")  return null\n\n  const wordsByMinutes = 230;\n  return Math.round(words / wordsByMinutes)\n}\n\nexport function timeToReadMessage (words) {\n  const time = timeToRead(words)\n  if (typeof time !== \"number\") return null\n  return `< ${time + 1} ${time < 1 ? \"minute\" : \"minutes\"}`\n}","import React, { useState, useRef, useEffect } from \"react\";\n\n/**\n * Settings\n */\nconst pluginApi = \"https://utteranc.es/client.js\";\nconst websiteRepo = \"AurelienDud/AurelienDud.github.io\";\nconst githubLabel = \"comments\";\nconst githubTitle = \"pathname\";\nconst commentsTheme = \"boxy-light\";\n\n/**\n * Override Utterances styles\n * this is ugly but the plugin seems not provide a way to customize its container styles\n * and set an arbitrary max-width\n */\nconst forceStyles = `\n  .utterances {\n    max-width: 100% !important;\n  }\n`;\n\n/**\n * Comments component\n */\nfunction Comments() {\n  const comments = useRef(null);\n  const [isReady, setIsReady] = useState(false);\n\n  useEffect(() => {\n    if (comments?.current && !isReady) {\n      const scriptTag = document.createElement(\"script\");\n      scriptTag.async = true;\n      scriptTag.src = pluginApi;\n      scriptTag.setAttribute(\"repo\", websiteRepo);\n      scriptTag.setAttribute(\"issue-term\", githubTitle);\n      scriptTag.setAttribute(\"theme\", commentsTheme);\n      scriptTag.setAttribute(\"label\", githubLabel);\n      scriptTag.setAttribute(\"async\", true);\n      scriptTag.setAttribute(\"crossorigin\", \"anonymous\");\n      scriptTag.setAttribute(\"reverse-order\", true);\n      scriptTag.setAttribute(\"input-position-top\", true);\n\n      comments.current.appendChild(scriptTag);\n      setIsReady(true);\n    }\n  }, [comments]);\n\n  return (\n    <>\n      <style>{forceStyles}</style>\n      <div className=\"w-100\" ref={comments} />\n    </>\n  );\n}\n\nexport default Comments;\n","import React, { useRef, useEffect } from \"react\";\nimport { cx, css } from \"@emotion/css\";\nimport { graphql } from \"gatsby\";\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\";\nimport { MDXProvider } from \"@mdx-js/react\";\nimport { MDXRenderer } from \"gatsby-plugin-mdx\";\nimport mdxComponents from \"services/mdxConvertor\";\nimport { formatBlogData } from \"services/formaters\";\nimport { getCategoryRoute } from \"services/routes\";\nimport { timeToReadMessage } from \"services/tools\";\nimport Layout from \"partials/layouts/layout-page\";\nimport Link from \"components/link\";\nimport Comments from \"partials/common/comments\";\n\n/**\n * Settings\n */\nconst parallaxStrength = 1.25;\n\n/**\n * QUery\n */\nexport const pageQuery = graphql`\n  query($slug: String!) {\n    mdx(fields: { slug: { eq: $slug } }) {\n      id\n      body\n      wordCount {\n        words\n      }\n      frontmatter {\n        title\n        category\n        date\n        cover {\n          childImageSharp {\n            gatsbyImageData(layout: FULL_WIDTH)\n          }\n        }\n      }\n    }\n  }\n`;\n\n/**\n * Styles\n */\nconst coverStyle = css`\n  position: relative;\n  overflow: hidden;\n  box-shadow: 0px -40px 40px -40px inset #00000030;\n  &:after {\n    content: \"\";\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    border-top: solid 2vw transparent;\n    border-bottom: solid 2vw white;\n    border-left: solid 50vw white;\n    border-right: solid 50vw white;\n  }\n`;\n\nconst coverImgStyles = css`\n  position: relative;\n  border-radius: 5px;\n  border-top: solid 6px white;\n  border-right: solid 6px white;\n  border-left: solid 6px white;\n  transform-origin: center;\n  transform: translate3d(0, 0, 0);\n  -webkit-transform-style: preserve-3d;\n  -webkit-backface-visibility: hidden;\n  transition: all 0s 0s;\n  background-color: #ffffff30;\n  opacity: 1;\n  transition: opacity linear 0.4s;\n  box-shadow: rgb(0 0 0 / 33%) 0px -45px 20px -20px inset;\n`;\n\n/**\n * View\n * @param {object} props\n */\nexport default function Template({ data }) {\n  // format mdx data\n  const model = formatBlogData(data.mdx);\n\n  // metadata\n  const meta = {\n    type: \"article\",\n    category: model.category,\n  };\n\n  // set a ref on the cover container to create the visual effect\n  const coverEl = useRef(null);\n\n  // set a ref to manage the parallax effect\n  const parallax = useRef({\n    scroll: 0,\n    mov: 0,\n    elBound: null,\n  });\n\n  // init parallax\n  useEffect(() => {\n    if (!model.cover || !coverEl.current) return;\n\n    if (!parallax.current.elBound)\n      parallax.current.elBound = coverEl.current.getBoundingClientRect();\n  }, [coverEl, model]);\n\n  // manage parallax effect\n  useEffect(() => {\n    if (!model.cover || !coverEl.current) return;\n\n    // handle event\n    function handleScroll(event) {\n      event.preventDefault();\n\n      if (\n        !parallax.current.elBound ||\n        window.scrollY > parallax.current.elBound.height\n      )\n        return;\n\n      const scroll = Math.max(0, Math.round(window.scrollY * parallaxStrength));\n      const mov = Math.round(scroll - parallax.current.scroll);\n      const opacity =\n        1 - (1 / parallax.current.elBound.height) * scroll * parallaxStrength;\n\n      if (\n        Math.sign(mov) === Math.sign(parallax.current.mov) ||\n        parallax.current.scroll === 0\n      ) {\n        coverEl.current.style.transform = `translate3d(0, ${scroll}px, 0)`;\n        coverEl.current.style.opacity = opacity;\n      }\n\n      parallax.current.scroll = scroll;\n      parallax.current.mov = mov;\n    }\n\n    // create event\n    window.addEventListener(\"scroll\", handleScroll);\n\n    // remove event\n    return () => {\n      window.removeEventListener(\"scroll\", handleScroll);\n    };\n  }, [model]);\n\n  return (\n    <Layout meta={meta}>\n      {/* cover */}\n      {model.cover && (\n        <div style={{ overflow: \"hidden\" }}>\n          <div className={cx(coverStyle, \"bg-primary\")}>\n            <div className=\"container-reading\">\n              <div className={coverImgStyles} ref={coverEl}>\n                <GatsbyImage image={getImage(model.cover)} alt=\"\" />\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* content */}\n      <div className=\"container mt-2 mb-3\">\n        {(model.title || model.category) && (\n          <div className=\"h1 mb-3 text-center\">\n            {/* title */}\n            {model.title && <h1 className=\"h-0\">{model.title}</h1>}\n\n            {/* category */}\n            {/* {model.category && (\n              <Link\n                to={getCategoryRoute(model.category)}\n                className=\"badge badge-secondary mb-2 decoration-unset\"\n              >\n                {model.category}\n              </Link>\n            )} */}\n          </div>\n        )}\n\n        <div className=\"container-reading mt-3\">\n          {model.date && model.words && (\n            <div className=\"py-1 my-4 border-top border-bottom text-muted small\">\n              <div className=\"row no-gutters\">\n                {model.category && (\n                  <div className=\"col-12 col-sm px-1\">\n                    <Link\n                      to={getCategoryRoute(model.category)}\n                      className=\"decoration-unset\"\n                    >\n                      Catégorie : {model.category}\n                    </Link>\n                  </div>\n                )}\n\n                {model.words && (\n                  <div className=\"col-12 col-sm px-1 text-center\">\n                    {timeToReadMessage(40)}\n                  </div>\n                )}\n\n                {/* date */}\n                {model.date && (\n                  <div className={cx(\"col-12 col-sm px-1\", model.words && \"text-sm-right border-top border-sm-top-0 pt-1 pt-sm-0 mt-1 mt-sm-0\")}>\n                    publié le {model.date}\n                  </div>\n                )}\n              </div>\n            </div>\n          )}\n\n          {/* body */}\n          {model.body && (\n            <MDXProvider components={mdxComponents}>\n              <MDXRenderer>{model.body}</MDXRenderer>\n            </MDXProvider>\n          )}\n\n          {/* comments */}\n          <div className=\"mt-4 pt-1 border-top\">\n            <Comments />\n          </div>\n        </div>\n      </div>\n    </Layout>\n  );\n}\n"],"sourceRoot":""}