{"version":3,"sources":["webpack://aureliendud-website/./src/partials/blog/comments.tsx","webpack://aureliendud-website/./src/partials/blog/cover.tsx","webpack://aureliendud-website/./src/components/publisherInfo.tsx","webpack://aureliendud-website/./src/templates/template-blog.tsx"],"names":["comments","useRef","useState","isReady","setIsReady","useEffect","current","scriptTag","document","createElement","async","src","setAttribute","appendChild","className","ref","coverStyle","css","coverImgStyles","coverImage","copyright","coverEl","parallax","scroll","mov","elBound","handleScroll","event","preventDefault","window","scrollY","height","Math","max","round","opacity","sign","style","transform","toString","getBoundingClientRect","addEventListener","removeEventListener","overflow","cx","G","image","title","alt","date","data","readingArea","wordsCounter","setWordsCounter","model","formatPost","mdx","cover","getImage","meta","type","category","handleWordsCounter","content","y","windowH","innerHeight","floor","width","coverCopy","body","MDXProvider","components","mdxComponents","MDXRenderer"],"mappings":"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","file":"component---src-templates-template-blog-tsx-ce983203d625c0601b95.js","sourcesContent":["import React, { FunctionComponent, useState, useRef, useEffect } from 'react'\n\n/**\n * Settings\n */\nconst pluginApi = 'https://utteranc.es/client.js'\nconst websiteRepo = 'AurelienDud/AurelienDud.github.io'\nconst githubLabel = 'comments'\nconst githubTitle = 'pathname'\nconst commentsTheme = 'boxy-light'\n\n/**\n * Override Utterances styles\n * this is ugly but the plugin seems not provide a way to customize its container styles\n * and set an arbitrary max-width\n */\nconst forceStyles = `\n  .utterances {\n    max-width: 100% !important;\n  }\n`\n\n/**\n * Comments component\n */\nconst Comments:FunctionComponent = () => {\n  const comments = useRef<HTMLDivElement>(null)\n  const [isReady, setIsReady] = useState(false)\n\n  useEffect(() => {\n    if (comments?.current && !isReady) {\n      const scriptTag = document.createElement('script')\n      scriptTag.async = true\n      scriptTag.src = pluginApi\n      scriptTag.setAttribute('repo', websiteRepo)\n      scriptTag.setAttribute('issue-term', githubTitle)\n      scriptTag.setAttribute('theme', commentsTheme)\n      scriptTag.setAttribute('label', githubLabel)\n      scriptTag.setAttribute('async', 'true')\n      scriptTag.setAttribute('crossorigin', 'anonymous')\n      scriptTag.setAttribute('reverse-order', 'true')\n      scriptTag.setAttribute('input-position-top', 'true')\n\n      comments.current.appendChild(scriptTag)\n      setIsReady(true)\n    }\n  }, [comments])\n\n  return (\n    <>\n      <style>{forceStyles}</style>\n      <div className='w-100' ref={comments} />\n    </>\n  )\n}\n\nexport default Comments\n","import React, { FunctionComponent, useRef, useEffect } from \"react\"\nimport { css, cx } from '@emotion/css'\nimport { GatsbyImage, IGatsbyImageData } from \"gatsby-plugin-image\"\n\n/**\n * Type\n */\ninterface IBlogCover {\n  coverImage: IGatsbyImageData,\n  copyright?: string\n}\n\ninterface IParallax {\n  scroll: number,\n  mov: number,\n  elBound: DOMRect|null,\n}\n\n/**\n * Settings\n */\nconst parallaxStrength:number = 1.25\n\n\n/**\n * Styles\n */\nconst coverStyle = css`\n  position: relative;\n  overflow: hidden;\n  box-shadow: 0px -40px 40px -40px inset #00000030;\n  &:after {\n    content: \"\";\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    border-top: solid 2vw transparent;\n    border-bottom: solid 2vw white;\n    border-left: solid 50vw white;\n    border-right: solid 50vw white;\n  }\n`\n\nconst coverImgStyles = css`\n  position: relative;\n  border-radius: 5px;\n  border-top: solid 6px white;\n  border-right: solid 6px white;\n  border-left: solid 6px white;\n  transform-origin: center;\n  transform: translate3d(0, 0, 0);\n  -webkit-transform-style: preserve-3d;\n  -webkit-backface-visibility: hidden;\n  transition: all 0s 0s;\n  background-color: #ffffff30;\n  opacity: 1;\n  transition: opacity linear 0.4s;\n  box-shadow: rgb(0 0 0 / 33%) 0px -45px 20px -20px inset;\n`\n\n/**\n * View\n */\nconst BlogCover:FunctionComponent<IBlogCover> = ({ coverImage, copyright }) => {\n  // set a ref on the cover container to create the visual effect\n  const coverEl = useRef<HTMLDivElement>(null)\n\n  // set a ref to manage the parallax effect\n  const parallax = useRef<IParallax>({\n    scroll: 0,\n    mov: 0,\n    elBound: null,\n  })\n\n  // handle event\n  const handleScroll = (event:Event) => {\n    event.preventDefault()\n\n    if ( \n      !coverImage \n      || !coverEl.current \n      || !parallax.current.elBound\n      || window.scrollY > parallax.current.elBound.height\n    ) return\n    \n    // get scroll\n    const scroll = Math.max(0, Math.round(window.scrollY * parallaxStrength))\n\n    // get scroll distance \n    const mov = Math.round(scroll - parallax.current.scroll)\n\n    // calcul opacity\n    const opacity = 1 - (1 / parallax.current.elBound.height) * scroll * parallaxStrength\n\n    // apply conditional style\n    if ( \n      Math.sign(mov) === Math.sign(parallax.current.mov) \n      || parallax.current.scroll === 0 \n    ){\n      coverEl.current.style.transform = `translate3d(0, ${scroll}px, 0)`\n      coverEl.current.style.opacity = opacity.toString()\n    }\n\n    // apply new values\n    parallax.current.scroll = scroll\n    parallax.current.mov = mov\n  }\n\n  // init parallax\n  useEffect(() => {\n    if ( parallax.current.elBound || !coverEl.current ) return  \n    \n    parallax.current.elBound = coverEl.current.getBoundingClientRect()\n  }, [coverEl])\n\n  // manage parallax effect\n  useEffect(() => {\n    window.addEventListener(\"scroll\", handleScroll)\n    \n    return () => window.removeEventListener(\"scroll\", handleScroll)\n  }, [])\n\n  return (\n    <div style={{ overflow: \"hidden\" }}>\n      <div className={cx(coverStyle, \"bg-primary\")}>\n        <div className=\"container-reading\">\n          <div className={coverImgStyles} ref={coverEl}>\n            <GatsbyImage image={coverImage} title={`Source de l'image: ${copyright || 'inconnue'}`} alt='' />\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\n\nexport default BlogCover\n\n","import React, { FunctionComponent } from 'react'\nimport Avatar from 'components/3dAvatar'\n\ninterface IPublisherInfo {\n  date?: Date\n}\n\nconst PublisherInfo:FunctionComponent<IPublisherInfo> = ({ date }) => {\n  return (\n    <div className='row no-gutters my-4 shadow rounded'>\n      <div className='col-2 d-flex bg-dark p-1 rounded-left'>\n        <div className='w-100 my-auto'>\n          <Avatar />\n        </div>\n      </div>\n      <div className='col d-flex'>\n        <div className='my-auto pl-3 py-2 pr-2'>\n          Publié par Aurélien Dudonney\n          {date && (<>\n            <br />\n            <span>le {date}</span>  \n          </>)}\n        </div>\n      </div>\n    </div>\n  ) \n}\n\nexport default PublisherInfo","import React, { FunctionComponent, useEffect, useState, useRef } from \"react\"\nimport { graphql } from \"gatsby\"\nimport { getImage } from \"gatsby-plugin-image\"\nimport { MDXProvider } from \"@mdx-js/react\"\nimport { MDXRenderer } from \"gatsby-plugin-mdx\"\nimport mdxComponents from \"services/mdxConvertor\"\nimport { formatPost } from \"services/formaters\"\nimport { timeToReadMessage } from \"services/tools\"\nimport Layout from \"partials/layouts/layout-page\"\nimport Comments from \"partials/blog/comments\"\nimport Cover from \"partials/blog/cover\"\nimport PublisherInfo from 'components/publisherInfo'\n\n/**\n * Types\n */\ninterface IBlogTemplate {\n  data: IMdxData\n}\n\n/**\n * QUery\n */\nexport const pageQuery = graphql`\n  query($slug: String!) {\n    mdx(fields: { slug: { eq: $slug } }) {\n      id\n      body\n      wordCount {\n        words\n      }\n      frontmatter {\n        title\n        category\n        date\n        coverCopy,\n        cover {\n          childImageSharp {\n            gatsbyImageData(layout: FULL_WIDTH)\n          }\n        }\n      }\n    }\n  }\n`\n\n\n/**\n * View\n */\nconst BlogTemplate:FunctionComponent<IBlogTemplate> = ({ data }) => {\n  const readingArea = useRef<HTMLDivElement>(null)\n  const [wordsCounter, setWordsCounter] = useState<number>(0)\n\n  // format mdx data\n  const model = formatPost(data.mdx)\n\n  // cover image\n  const coverImage = model.cover && getImage(model.cover)\n\n  // metadata\n  const meta:Partial<ISEO> = {\n    type: \"article\",\n    category: model.category,\n  }\n\n  \n  // wordscounter\n  const handleWordsCounter = () => {\n    if (!readingArea.current) return\n\n    let content = readingArea.current.getBoundingClientRect()\n    let scrollY =  content.y * -1\n    let windowH = window.innerHeight\n\n    if (scrollY > 0 && scrollY < (content.height + windowH) ) {\n      setWordsCounter(Math.floor((100 / (content.height - windowH)) * scrollY))\n    }\n  }\n\n  // init wordsCounter event \n  useEffect(() => {\n    window.addEventListener('scroll', handleWordsCounter)\n    return () => window.removeEventListener('scroll', handleWordsCounter)\n  }, [])\n \n  return (\n    <Layout meta={meta}>\n      <div className=\"reading-time\">\n        <div className=\"reading-time-range\" style={{ width: `${wordsCounter}%` }}></div>  \n      </div>\n  \n      {/* cover */}  \n      {coverImage && (\n        <Cover coverImage={coverImage} copyright={model.coverCopy} />\n      )}\n\n      {/* content */}\n      <div className=\"container mt-2 mb-2\">\n        {/* title */}\n        {model.title && (\n          <h1 className=\"h1 h-reading mb-2 mb-sm-3 text-center\">\n            {model.title}\n          </h1>\n        )}\n\n        {/* date & duration */}\n        <div className=\"container-reading\">\n          {/* body */}\n          {model.body && (\n            <div ref={readingArea}>\n              <MDXProvider components={mdxComponents}>\n                <MDXRenderer>{model.body}</MDXRenderer>\n              </MDXProvider>\n            </div>\n          )}\n\n          <PublisherInfo date={model.date} />\n\n          {/* comments */}\n          <div className=\"mt-4 p-1 border rounded shadow-sm\">\n            <Comments />\n          </div>\n        </div>\n      </div>\n    </Layout> \n  )\n}\n\n\nexport default BlogTemplate"],"sourceRoot":""}