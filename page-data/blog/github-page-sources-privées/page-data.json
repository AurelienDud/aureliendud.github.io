{"componentChunkName":"component---src-templates-template-blog-tsx","path":"/blog/github-page-sources-privées","result":{"data":{"mdx":{"id":"1ae863f2-a497-5be7-9673-0c111f7f6239","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Hébergement Github Page avec sources privées\",\n  \"slug\": \"/github-page-sources-privées\",\n  \"date\": \"2021-09-02T00:00:00.000Z\",\n  \"category\": \"workflow\",\n  \"cover\": \"../../assets/images/cover/infra_private-patrick_tomasso.png\",\n  \"coverCopy\": \"Patrick Tomasso sur Unsplash.com\",\n  \"publish\": true,\n  \"tags\": [\"workflow\", \"github\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"La mise en production d'un site Github Page par d'un workflow automatis\\xE9 est un sujet bien document\\xE9. Il s'agit g\\xE9n\\xE9ralement de compiler les sources pr\\xE9sentes sur une branche du d\\xE9p\\xF4t puis de copier le r\\xE9sultat sur une autre branche du m\\xEAme d\\xE9p\\xF4t. Or un pr\\xE9requis de Github Page est d'\\xEAtre h\\xE9berg\\xE9 en public.\"), mdx(\"p\", null, \"Je vais d\\xE9tailler ici une solution alternative permettant de s\\xE9parer les sources du build.\\nCette architecture pr\\xE9sente deux principaux avantages : \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"cela autorise les sources \\xE0 \\xEAtre priv\\xE9es et donc permet de contr\\xF4ler ce que l'on d\\xE9voile en production ;\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"cela permet une claire isolation entre le stockage des sources et l'h\\xE9bergement du site. Ainsi de futures migrations de services s'effectuerons sans laisser de \\\"r\\xE9sidus\\\". Les d\\xE9p\\xF4ts devenus inutiles pourront simplement \\xEAtre supprim\\xE9s ou archiv\\xE9s. \")), mdx(\"h2\", null, \"Le plan de bataille\"), mdx(\"p\", null, \"Nous allons avoir besoin de deux d\\xE9p\\xF4ts Github et d'un environnement de d\\xE9veloppement front (NodeJs, Git, SSH...).\\nNous h\\xE9bergerons le code source sur un d\\xE9p\\xF4t priv\\xE9 qui ex\\xE9cutera un workflow automatis\\xE9 Github Actions afin de copier une version compil\\xE9e du site sur un d\\xE9p\\xF4t public d\\xE9fini comme Github Page. Voici une repr\\xE9sentation simplifi\\xE9e des \\xE9l\\xE9ments mis en \\u0153uvre.\"), mdx(\"img\", {\n    src: imageSimplifiedArchi,\n    fluid: true,\n    alt: \"\"\n  }), mdx(\"h2\", null, \"Le d\\xE9p\\xF4t de production\"), mdx(\"p\", null, \"Un compte personnel Github peut comporter une \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://pages.github.com/\"\n  }, \"Github Page\"), \" principale et des Github Pages secondaires qui y seront rattach\\xE9es. Le d\\xE9p\\xF4t de la Github Page principale doit \\xEAtre nomm\\xE9 suivant le pattern \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"username.github.io\"), \".\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"D\\xE9pot\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Page\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"username.github.io.git\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"username.github.io\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"projectOne.git\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"username.github.io/projectOne\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"projectTwo.git\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"username.github.io/projectTwo\")))), mdx(\"p\", null, \"Nous devons donc cr\\xE9er un d\\xE9p\\xF4t respectant cette contrainte en prenant soin de le d\\xE9finir comme public.\\nUne premi\\xE8re configuration peut \\xEAtre effectu\\xE9e de suite en nous rendant dans l'onglet \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Settings\"), \" du d\\xE9p\\xF4t nouvellement cr\\xE9\\xE9, puis dans la section \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Pages\"), \". Selectionnez y la branche principale comme source de la Github Page.\"), mdx(\"img\", {\n    src: imageGithubPagesActivation,\n    fluid: true,\n    alt: \"\"\n  }), mdx(\"h2\", null, \"Le d\\xE9p\\xF4t de d\\xE9veloppement\"), mdx(\"p\", null, \"Cr\\xE9ons maintenant un second d\\xE9p\\xF4t pour accueillir les sources.\\nPar soucis de clart\\xE9, il me semble pertinent d'utiliser le pattern pr\\xE9c\\xE9dent en y ajoutant un suffixe : \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"username.github.io.sources\"), \". \"), mdx(\"p\", null, \"Ce d\\xE9p\\xF4t peut \\xEAtre d\\xE9fini comme priv\\xE9 puisque c'est le but de cette article.\"), mdx(\"h2\", null, \"Authentification SSH\"), mdx(\"p\", null, \"L'authentification entre les deux d\\xE9p\\xF4ts est effectu\\xE9e par \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://en.wikipedia.org/wiki/Ssh-keygen\"\n  }, \"cl\\xE9s SSH\"), \" stock\\xE9s dans les configurations de de Github. Je ne m'attarde pas sur ce sujet car la proc\\xE9dure pour en g\\xE9n\\xE9rer est clairement expliqu\\xE9e dans \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://docs.github.com/en/github/authenticating-to-github/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent\"\n  }, \"la documentation de Github\"), \".\"), mdx(\"p\", null, \"Une fois obtenu nous allons les enregistrer la cl\\xE9 priv\\xE9e comme \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Secret\"), \" du d\\xE9p\\xF4t de sources.\\nLes valeurs secr\\xE8tes de Github sont des variables d'environnement prot\\xE9g\\xE9es.\\nVous pouvez utiliser leurs r\\xE9f\\xE9rences mais leurs valeurs restent secr\\xE8te.\\nRendez-vous donc dans l'onglet \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Settings\"), \" du d\\xE9p\\xF4t puis \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Secrets\"), \". \"), mdx(\"p\", null, \"La cl\\xE9 publique est utilis\\xE9e sur le d\\xE9p\\xF4t accueillant le build du site.\\nAllez dans ses \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Settings\"), \" puis cette fois dans \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Deploy Keys\"), \" afin d'enregistrer votre cl\\xE9.\\nAttention, il est n\\xE9cessaire de cocher la case \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Allow write access\"), \" afin d'autoriser la copie des fichiers compil\\xE9s dans ce d\\xE9p\\xF4t.\"), mdx(\"h2\", null, \"Le script de d\\xE9ploiement\"), mdx(\"p\", null, \"Nous devons maintenant automatiser le workflow par un script d\\xE9finissant les actions \\xE0 effectuer.\\nLes \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/features/actions\"\n  }, \"Github Actions\"), \" nous permettent cela tr\\xE8s facilement.\\nOuvrez l'onglet \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Actions\"), \" du d\\xE9p\\xF4t de sources puis cr\\xE9ez un nouveau workflow vierge. \"), mdx(\"img\", {\n    src: imageGithubActionsNew,\n    alt: \"\",\n    fluid: true\n  }), \"Les workflows de Github Actions permettent d'ex\\xE9cuter des commandes dans l'environnement conteneuris\\xE9 de notre choix. Ils sont \\xE9crits en syntaxe [YAML](https://fr.wikipedia.org/wiki/YAML). Voici le type de workflow que j'utilise :\", mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-yaml\"\n  }, \"name: Build and Deploy\\n \\non:\\n  push:\\n    branches:\\n      - main\\n \\njobs:\\n  deploy:\\n    runs-on: ubuntu-latest\\n    steps:\\n      - uses: actions/checkout@v2\\n \\n      - uses: actions/setup-node@v2.1.2\\n        with:\\n          node-version: '14.x'\\n \\n      - name: Get yarn cache directory path\\n        id: yarn-cache-dir-path\\n        run: echo \\\"::set-output name=dir::$(yarn cache dir)\\\"\\n \\n      - uses: actions/cache@v2\\n        id: yarn-cache \\n        with:\\n          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}\\n          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}\\n          restore-keys: |\\n            ${{ runner.os }}-yarn-\\n \\n      - run: yarn install --frozen-lockfile\\n      - run: yarn run build\\n \\n      - uses: peaceiris/actions-gh-pages@v3\\n        with:\\n          deploy_key: ${{ secrets.DEPLOY_KEY }}\\n          publish_dir: ./public\\n          external_repository: AurelienDud/AurelienDud.github.io\\n          publish_branch: main\\n\")), mdx(\"p\", null, \"La cl\\xE9 \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"on\"), \" d\\xE9finit les \\xE9v\\xE9nements d\\xE9clenchant le script. Il peut s'agir d'un \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://fr.wikipedia.org/wiki/Cron\"\n  }, \"cron\"), \" ou changement sur d\\xE9p\\xF4t. Soyez prudent si vous \\xEAtes tent\\xE9 de d\\xE9finir un d\\xE9clenchement bas\\xE9 sur un cron car les comptes \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Free\"), \" de Github sont limit\\xE9s \\xE0 2000 minutes de fonctionnement par mois sur les d\\xE9p\\xF4ts priv\\xE9s. Le plus classique pour un site est de d\\xE9ployer lorsque des modifications sont pouss\\xE9es sur la branche principale. \"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-yaml\"\n  }, \"on:\\n  push:\\n    branches:\\n      - main\\n\")), mdx(\"p\", null, \"Voici au passage un rappel sur les bonnes pratiques de branches git. Les d\\xE9veloppements doivent s'effectuer sur des branches d\\xE9di\\xE9es. Lorsqu'une \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"release\"), \" est souhait\\xE9e une nouvelle branche doit \\xEAtre cr\\xE9\\xE9e afin d'accueillir les fusions.\\nAinsi la branche principale n'est pas impact\\xE9e en cas de fusion probl\\xE9matique.\"), mdx(\"img\", {\n    src: imageGitCleanBlanches,\n    fluid: true,\n    alt: \"\"\n  }), \"La cl\\xE9 *jobs* va d\\xE9crire les actions \\xE0 effectuer. L'unique action de ce workflow se nomme *deploy*. ```yaml jobs: deploy: ```\", mdx(\"p\", null, \"Nous d\\xE9finissons ensuite un environnement serveur.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-yaml\"\n  }, \"runs-on: ubuntu-latest\\n\")), mdx(\"p\", null, \"Puis les \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"steps\"), \" des actions \\xE0 ex\\xE9cuter sous forme de liste.\\nLe mot cl\\xE9 \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"uses\"), \" permet d'indiquer que nous souhaitons utiliser des scripts r\\xE9utilisables.\\nComprendre par l\\xE0 une librairie Github Actions.  \"), mdx(\"p\", null, \"Nous commen\\xE7ons par r\\xE9cup\\xE9rer les derni\\xE8res modifications sur le d\\xE9p\\xF4t.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-yaml\"\n  }, \"- uses: actions/checkout@v2\\n\")), mdx(\"p\", null, \"Avant d'initialiser NodeJs \\xE0 la version souhait\\xE9e. \"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-yaml\"\n  }, \"- uses: actions/setup-node@v2.1.2\\n    with:\\n      node-version: '14.x'\\n\")), mdx(\"p\", null, \"et d'activer le cache \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/actions/cache/blob/main/examples.md#node---yarn\"\n  }, \"tel que d\\xE9fini dans la documentation d\\xE9di\\xE9e\"), \". \"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-yaml\"\n  }, \"- name: Get yarn cache directory path\\n  id: yarn-cache-dir-path\\n  run: echo \\\"::set-output name=dir::$(yarn cache dir)\\\"\\n \\n- uses: actions/cache@v2\\n  id: yarn-cache \\n  with:\\n    path: ${{ steps.yarn-cache-dir-path.outputs.dir }}\\n    key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}\\n    restore-keys: |\\n      ${{ runner.os }}-yarn-\\n\")), mdx(\"p\", null, \"Ensuite nous ex\\xE9cutons les commandes d'installation et de compilation contenu dans le \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"package.json\"), \" du projet que nous cr\\xE9erons plus tard.\\nUn coup d'\\u0153il dans \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/gatsbyjs/gatsby-starter-default/blob/master/package.json\"\n  }, \"la documentation de GatsbyJs\"), \" nous confirme qu'elles seront tr\\xE8s classiques.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-yaml\"\n  }, \"- run: yarn install --frozen-lockfile\\n- run: yarn run build\\n\")), mdx(\"p\", null, \"Le premi\\xE8re commande installe les d\\xE9pendances en respectant les versions mentionn\\xE9es dans le fichier \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"yarn.lock\"), \" (la commande \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"npm ci\"), \" doit-\\xEAtre utilis\\xE9 en cas d'utilisation de NPM). Cela va garantir l'usage de versions test\\xE9es en d\\xE9veloppement et donc pr\\xE9venir des probl\\xE8mes d'incompatibilit\\xE9.\"), mdx(\"p\", null, \"Puis la seconde commande ex\\xE9cute la compilation des sources. \"), mdx(\"p\", null, \"Le site est g\\xE9n\\xE9r\\xE9 alors mais ses fichiers se trouvent sur une machine virtuelle de Github. \"), mdx(\"p\", null, \"Pour d\\xE9ployer ces sources sur le d\\xE9p\\xF4t d\\xE9di\\xE9 j'utilise \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/peaceiris/actions-gh-pages\"\n  }, \"une \", mdx(\"em\", {\n    parentName: \"a\"\n  }, \"action\"), \" d\\xE9velopp\\xE9e par un confr\\xE8re developpeur\"), \".\\nIl suffit d'indiquer la r\\xE9f\\xE9rence de la cl\\xE9 SSH (deploy_key), le r\\xE9pertoire dans lequel a \\xE9t\\xE9 g\\xE9n\\xE9r\\xE9 le build (publish_dir), puis les informations de destination (external_repository, publish_branch).\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-yaml\"\n  }, \"- uses: peaceiris/actions-gh-pages@v3\\n  with:\\n    deploy_key: ${{ secrets.DEPLOY_KEY }}\\n    publish_dir: ./public\\n    external_repository: AurelienDud/AurelienDud.github.io\\n    publish_branch: main\\n\")), mdx(\"p\", null, \"Voil\\xE0, l'infrastructure du projet est pr\\xEAte !\"), mdx(\"img\", {\n    src: \"https://i.giphy.com/media/3owyp4lrgQjqeLe0hy/200w.webp\",\n    alt: \"\",\n    fluid: true,\n    copy: \"Giphy\"\n  }), mdx(\"p\", null, \"A la prochaine.\"));\n}\n;\nMDXContent.isMDXComponent = true;","wordCount":{"words":825},"frontmatter":{"title":"Hébergement Github Page avec sources privées","category":"workflow","date":"2 septembre 2021","coverCopy":"Patrick Tomasso sur Unsplash.com","cover":{"childImageSharp":{"gatsbyImageData":{"layout":"fullWidth","backgroundColor":"#d8d8d8","images":{"fallback":{"src":"/static/36121adc054185f63e2d1e84b27bb840/cf9cb/infra_private-patrick_tomasso.png","srcSet":"/static/36121adc054185f63e2d1e84b27bb840/5b584/infra_private-patrick_tomasso.png 750w,\n/static/36121adc054185f63e2d1e84b27bb840/c1f05/infra_private-patrick_tomasso.png 1080w,\n/static/36121adc054185f63e2d1e84b27bb840/9f70c/infra_private-patrick_tomasso.png 1366w,\n/static/36121adc054185f63e2d1e84b27bb840/cf9cb/infra_private-patrick_tomasso.png 1600w","sizes":"100vw"},"sources":[{"srcSet":"/static/36121adc054185f63e2d1e84b27bb840/73e0d/infra_private-patrick_tomasso.webp 750w,\n/static/36121adc054185f63e2d1e84b27bb840/9fede/infra_private-patrick_tomasso.webp 1080w,\n/static/36121adc054185f63e2d1e84b27bb840/d6ece/infra_private-patrick_tomasso.webp 1366w,\n/static/36121adc054185f63e2d1e84b27bb840/c224f/infra_private-patrick_tomasso.webp 1600w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":0.525}}}}}},"pageContext":{"id":"1ae863f2-a497-5be7-9673-0c111f7f6239","slug":"/blog/github-page-sources-privées"}},"staticQueryHashes":["1789751783","3521639313"]}